# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
x = int(input('1: '))
y = int(input('2: '))

try:
    print((lambda a, b: a / b)(x, y))
except (ZeroDivisionError,) as err:
    print(f"Деление на 0, {err.args[0]}")


# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.
def build_user_data(phone, mail, b_date, city, s_name, name):
    def f(txt):
        return txt.capitalize()

    return f'{f(s_name)} {f(name)},  родился {b_date} в г. {f(city)}. Контакты: {phone}, {mail}'


user_name = input('введите имя')
user_s_name = input('введите фамилию')
user_birth_date = input('введите год рождения')
user_city = input('введите город проживания')
user_mail = input('введите email')
user_phone = input('введите телефон')

user_str = build_user_data(
    phone=user_phone,
    mail=user_mail,
    b_date=user_birth_date,
    city=user_city,
    s_name=user_s_name,
    name=user_name
)
print(user_str)


# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и
# возвращает сумму наибольших двух аргументов.
def my_func(a, b, c):
    # сортируем по возрастанию, в конце будут нужные, если с reverse=True - нужные в начале
    data = sorted([int(a), int(b), int(c)])
    return data[2] + data[1]


res = my_func(
    input('1:'),
    input('2:'),
    input('3:')
)
print(res)


# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.

# Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
def my_func_exp(a, b):
    if b >= 0:
        return 'Число должно быть отрицательным'
    # здесь будет число х в степени у
    exp = a
    i = 1
    while i < abs(b):
        exp *= a
        i += 1
    return 1 / exp


result = my_func_exp(
    int(input('положительное число x: ')),
    int(input('отрицательное число y: '))
)
print(f'Рузльтата возведения в степень: {result}')


# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
# При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
# Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной
# ранее сумме и после этого завершить программу.
def uber_sum(source_sum, user_list):
    exit_mark = False
    for i in user_list:
        if i == 'q':
            exit_mark = True
            break
        source_sum += int(i)

    print(f'Сумма введенных чисел: {source_sum}')
    return source_sum, exit_mark


res_sum = 0
while True:
    user_str = input('Введите строку чисел, разделенных пробелом (укажите q для завершения)')
    user_str = user_str.split()
    res_sum, exit_command = uber_sum(res_sum, user_str)
    if exit_command:
        break


# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но
# с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре.
# Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
# Необходимо использовать написанную ранее функцию int_func().
def int_func(txt):
    first_letter = ord(txt[0:1])
    other_word = txt[1:]
    return chr(first_letter).upper() + other_word


input_text = 'Введите строку из слов, разделенных пробелом. Каждое слово состоит из латинских букв в нижнем регистре'
user_words = input(input_text).split()
for w in user_words:
    print(int_func(w))
